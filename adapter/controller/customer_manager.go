//Package controller generated by 'freedom new-project github.com/8treenet/crm-service'
package controller

import (
	"github.com/8treenet/crm-service/domain"
	"github.com/8treenet/crm-service/domain/vo"
	"github.com/8treenet/crm-service/infra"
	"github.com/8treenet/freedom"
)

func init() {
	freedom.Prepare(func(initiator freedom.Initiator) {
		initiator.BindController("/customer/manager", &CustomerManagerController{})
	})
}

// CustomerManagerController .
type CustomerManagerController struct {
	CustomerTempleteService *domain.CustomerManagerService
	Worker                  freedom.Worker
	Request                 *infra.Request
}

//Post handles the Post: /customer/manager/list route.
func (c *CustomerManagerController) PostList() freedom.Result {
	var list []vo.CustomerTemplate
	if e := c.Request.ReadJSON(&list, true); e != nil {
		return &infra.JSONResponse{Error: e}
	}

	if e := c.CustomerTempleteService.AddTempletes(list); e != nil {
		return &infra.JSONResponse{Error: e}
	}
	return &infra.JSONResponse{}
}

//Get handles the Get: /customer/manager/list route.
func (c *CustomerManagerController) GetList() freedom.Result {
	data, e := c.CustomerTempleteService.GetTempletes()
	if e != nil {
		return &infra.JSONResponse{Error: e}
	}
	return &infra.JSONResponse{Object: data}
}
