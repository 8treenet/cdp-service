//Package po generated by 'freedom new-po'
package po

import (
	"time"
)

// IPAddr .
type IPAddr struct {
	changes map[string]interface{}
	ID      int       `gorm:"primaryKey;column:id"`
	Addr    string    `gorm:"column:addr"`    // ip地址
	Country string    `gorm:"column:country"` // 国家
	Region  string    `gorm:"column:region"`  // 省
	City    string    `gorm:"column:city"`    // 市
	Created time.Time `gorm:"column:created"`
	Updated time.Time `gorm:"column:updated"`
}

// TableName .
func (obj *IPAddr) TableName() string {
	return "cdp_ip_addr"
}

// Location .
func (obj *IPAddr) Location() map[string]interface{} {
	return map[string]interface{}{"id": obj.ID}
}

// GetChanges .
func (obj *IPAddr) GetChanges() map[string]interface{} {
	if obj.changes == nil {
		return nil
	}
	result := make(map[string]interface{})
	for k, v := range obj.changes {
		result[k] = v
	}
	obj.changes = nil
	return result
}

// Update .
func (obj *IPAddr) Update(name string, value interface{}) {
	if obj.changes == nil {
		obj.changes = make(map[string]interface{})
	}
	obj.changes[name] = value
}

// SetAddr .
func (obj *IPAddr) SetAddr(addr string) {
	obj.Addr = addr
	obj.Update("addr", addr)
}

// SetCountry .
func (obj *IPAddr) SetCountry(country string) {
	obj.Country = country
	obj.Update("country", country)
}

// SetRegion .
func (obj *IPAddr) SetRegion(region string) {
	obj.Region = region
	obj.Update("region", region)
}

// SetCity .
func (obj *IPAddr) SetCity(city string) {
	obj.City = city
	obj.Update("city", city)
}

// SetCreated .
func (obj *IPAddr) SetCreated(created time.Time) {
	obj.Created = created
	obj.Update("created", created)
}

// SetUpdated .
func (obj *IPAddr) SetUpdated(updated time.Time) {
	obj.Updated = updated
	obj.Update("updated", updated)
}
