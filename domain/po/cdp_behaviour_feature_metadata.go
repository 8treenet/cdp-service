//Package po generated by 'freedom new-po'
package po

import (
	"time"

	"gorm.io/gorm"
)

// BehaviourFeatureMetadata .
type BehaviourFeatureMetadata struct {
	changes       map[string]interface{}
	ID            int       `gorm:"primaryKey;column:id"`
	FeatureID     int       `gorm:"column:featureId"`     // 行为的特性ID
	Variable      string    `gorm:"column:variable"`      // 类型的名称
	Title         string    `gorm:"column:title"`         // 中文的标题
	Kind          string    `gorm:"column:kind"`          // 类型
	Dict          string    `gorm:"column:dict"`          // 关联字典的key
	OrderByNumber int       `gorm:"column:orderByNumber"` // ck排序键，非0排序
	Created       time.Time `gorm:"column:created"`
	Updated       time.Time `gorm:"column:updated"`
}

// TableName .
func (obj *BehaviourFeatureMetadata) TableName() string {
	return "cdp_behaviour_feature_metadata"
}

// Location .
func (obj *BehaviourFeatureMetadata) Location() map[string]interface{} {
	return map[string]interface{}{"id": obj.ID}
}

// GetChanges .
func (obj *BehaviourFeatureMetadata) GetChanges() map[string]interface{} {
	if obj.changes == nil {
		return nil
	}
	result := make(map[string]interface{})
	for k, v := range obj.changes {
		result[k] = v
	}
	obj.changes = nil
	return result
}

// Update .
func (obj *BehaviourFeatureMetadata) Update(name string, value interface{}) {
	if obj.changes == nil {
		obj.changes = make(map[string]interface{})
	}
	obj.changes[name] = value
}

// SetFeatureID .
func (obj *BehaviourFeatureMetadata) SetFeatureID(featureID int) {
	obj.FeatureID = featureID
	obj.Update("featureId", featureID)
}

// SetVariable .
func (obj *BehaviourFeatureMetadata) SetVariable(variable string) {
	obj.Variable = variable
	obj.Update("variable", variable)
}

// SetTitle .
func (obj *BehaviourFeatureMetadata) SetTitle(title string) {
	obj.Title = title
	obj.Update("title", title)
}

// SetKind .
func (obj *BehaviourFeatureMetadata) SetKind(kind string) {
	obj.Kind = kind
	obj.Update("kind", kind)
}

// SetDict .
func (obj *BehaviourFeatureMetadata) SetDict(dict string) {
	obj.Dict = dict
	obj.Update("dict", dict)
}

// SetOrderByNumber .
func (obj *BehaviourFeatureMetadata) SetOrderByNumber(orderByNumber int) {
	obj.OrderByNumber = orderByNumber
	obj.Update("orderByNumber", orderByNumber)
}

// SetCreated .
func (obj *BehaviourFeatureMetadata) SetCreated(created time.Time) {
	obj.Created = created
	obj.Update("created", created)
}

// SetUpdated .
func (obj *BehaviourFeatureMetadata) SetUpdated(updated time.Time) {
	obj.Updated = updated
	obj.Update("updated", updated)
}

// AddFeatureID .
func (obj *BehaviourFeatureMetadata) AddFeatureID(featureID int) {
	obj.FeatureID += featureID
	obj.Update("featureId", gorm.Expr("featureId + ?", featureID))
}

// AddOrderByNumber .
func (obj *BehaviourFeatureMetadata) AddOrderByNumber(orderByNumber int) {
	obj.OrderByNumber += orderByNumber
	obj.Update("orderByNumber", gorm.Expr("orderByNumber + ?", orderByNumber))
}
