//Package po generated by 'freedom new-po'
package po

import (
	"time"
)

// BehaviourMetadata .
type BehaviourMetadata struct {
	changes map[string]interface{}
	ID      int       `gorm:"primaryKey;column:id"`
	Type    string    `gorm:"column:type"` // 行为的类型
	Created time.Time `gorm:"column:created"`
	Updated time.Time `gorm:"column:updated"`
}

// TableName .
func (obj *BehaviourMetadata) TableName() string {
	return "cdp_behaviour_metadata"
}

// Location .
func (obj *BehaviourMetadata) Location() map[string]interface{} {
	return map[string]interface{}{"id": obj.ID}
}

// GetChanges .
func (obj *BehaviourMetadata) GetChanges() map[string]interface{} {
	if obj.changes == nil {
		return nil
	}
	result := make(map[string]interface{})
	for k, v := range obj.changes {
		result[k] = v
	}
	obj.changes = nil
	return result
}

// Update .
func (obj *BehaviourMetadata) Update(name string, value interface{}) {
	if obj.changes == nil {
		obj.changes = make(map[string]interface{})
	}
	obj.changes[name] = value
}

// SetType .
func (obj *BehaviourMetadata) SetType(type1 string) {
	obj.Type = type1
	obj.Update("type", type1)
}

// SetCreated .
func (obj *BehaviourMetadata) SetCreated(created time.Time) {
	obj.Created = created
	obj.Update("created", created)
}

// SetUpdated .
func (obj *BehaviourMetadata) SetUpdated(updated time.Time) {
	obj.Updated = updated
	obj.Update("updated", updated)
}
