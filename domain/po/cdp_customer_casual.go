//Package po generated by 'freedom new-po'
package po

import (
	"gorm.io/gorm"
	"time"
)

// CustomerCasual .
type CustomerCasual struct {
	changes   map[string]interface{}
	ID        int       `gorm:"primaryKey;column:id"`
	UserID    int       `gorm:"column:userId"`    // 临时用户的用户id
	Employ    int       `gorm:"column:employ"`    // 1空闲
	StartTime time.Time `gorm:"column:startTime"` // 开始时间
	Identify  string    `gorm:"column:identify"`  // 识别key的value
	Cookie    string    `gorm:"column:cookie"`    // cookie数据
	Created   time.Time `gorm:"column:created"`
	Updated   time.Time `gorm:"column:updated"`
}

// TableName .
func (obj *CustomerCasual) TableName() string {
	return "cdp_customer_casual"
}

// Location .
func (obj *CustomerCasual) Location() map[string]interface{} {
	return map[string]interface{}{"id": obj.ID}
}

// GetChanges .
func (obj *CustomerCasual) GetChanges() map[string]interface{} {
	if obj.changes == nil {
		return nil
	}
	result := make(map[string]interface{})
	for k, v := range obj.changes {
		result[k] = v
	}
	obj.changes = nil
	return result
}

// Update .
func (obj *CustomerCasual) Update(name string, value interface{}) {
	if obj.changes == nil {
		obj.changes = make(map[string]interface{})
	}
	obj.changes[name] = value
}

// SetUserID .
func (obj *CustomerCasual) SetUserID(userID int) {
	obj.UserID = userID
	obj.Update("userId", userID)
}

// SetEmploy .
func (obj *CustomerCasual) SetEmploy(employ int) {
	obj.Employ = employ
	obj.Update("employ", employ)
}

// SetStartTime .
func (obj *CustomerCasual) SetStartTime(startTime time.Time) {
	obj.StartTime = startTime
	obj.Update("startTime", startTime)
}

// SetIdentify .
func (obj *CustomerCasual) SetIdentify(identify string) {
	obj.Identify = identify
	obj.Update("identify", identify)
}

// SetCookie .
func (obj *CustomerCasual) SetCookie(cookie string) {
	obj.Cookie = cookie
	obj.Update("cookie", cookie)
}

// SetCreated .
func (obj *CustomerCasual) SetCreated(created time.Time) {
	obj.Created = created
	obj.Update("created", created)
}

// SetUpdated .
func (obj *CustomerCasual) SetUpdated(updated time.Time) {
	obj.Updated = updated
	obj.Update("updated", updated)
}

// AddUserID .
func (obj *CustomerCasual) AddUserID(userID int) {
	obj.UserID += userID
	obj.Update("userId", gorm.Expr("userId + ?", userID))
}

// AddEmploy .
func (obj *CustomerCasual) AddEmploy(employ int) {
	obj.Employ += employ
	obj.Update("employ", gorm.Expr("employ + ?", employ))
}
