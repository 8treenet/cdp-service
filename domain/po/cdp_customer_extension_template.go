//Package po generated by 'freedom new-po'
package po

import (
	"gorm.io/gorm"
	"time"
)

// CustomerExtensionTemplate .
type CustomerExtensionTemplate struct {
	changes  map[string]interface{}
	ID       int       `gorm:"primaryKey;column:id"`
	Name     string    `gorm:"column:name"`     // key
	Kind     string    `gorm:"column:kind"`     // 类型
	Dict     string    `gorm:"column:dict"`     // 关联字典的key
	Reg      string    `gorm:"column:reg"`      // 正则
	Required int       `gorm:"column:required"` // 1 必填
	Sort     int       `gorm:"column:sort"`     // 排序
	Created  time.Time `gorm:"column:created"`
	Updated  time.Time `gorm:"column:updated"`
}

// TableName .
func (obj *CustomerExtensionTemplate) TableName() string {
	return "cdp_customer_extension_template"
}

// Location .
func (obj *CustomerExtensionTemplate) Location() map[string]interface{} {
	return map[string]interface{}{"id": obj.ID}
}

// GetChanges .
func (obj *CustomerExtensionTemplate) GetChanges() map[string]interface{} {
	if obj.changes == nil {
		return nil
	}
	result := make(map[string]interface{})
	for k, v := range obj.changes {
		result[k] = v
	}
	obj.changes = nil
	return result
}

// Update .
func (obj *CustomerExtensionTemplate) Update(name string, value interface{}) {
	if obj.changes == nil {
		obj.changes = make(map[string]interface{})
	}
	obj.changes[name] = value
}

// SetName .
func (obj *CustomerExtensionTemplate) SetName(name string) {
	obj.Name = name
	obj.Update("name", name)
}

// SetKind .
func (obj *CustomerExtensionTemplate) SetKind(kind string) {
	obj.Kind = kind
	obj.Update("kind", kind)
}

// SetDict .
func (obj *CustomerExtensionTemplate) SetDict(dict string) {
	obj.Dict = dict
	obj.Update("dict", dict)
}

// SetReg .
func (obj *CustomerExtensionTemplate) SetReg(reg string) {
	obj.Reg = reg
	obj.Update("reg", reg)
}

// SetRequired .
func (obj *CustomerExtensionTemplate) SetRequired(required int) {
	obj.Required = required
	obj.Update("required", required)
}

// SetSort .
func (obj *CustomerExtensionTemplate) SetSort(sort int) {
	obj.Sort = sort
	obj.Update("sort", sort)
}

// SetCreated .
func (obj *CustomerExtensionTemplate) SetCreated(created time.Time) {
	obj.Created = created
	obj.Update("created", created)
}

// SetUpdated .
func (obj *CustomerExtensionTemplate) SetUpdated(updated time.Time) {
	obj.Updated = updated
	obj.Update("updated", updated)
}

// AddRequired .
func (obj *CustomerExtensionTemplate) AddRequired(required int) {
	obj.Required += required
	obj.Update("required", gorm.Expr("required + ?", required))
}

// AddSort .
func (obj *CustomerExtensionTemplate) AddSort(sort int) {
	obj.Sort += sort
	obj.Update("sort", gorm.Expr("sort + ?", sort))
}
